#!/bin/bash

set -eo pipefail

# We want to build up a workspace similar to the one that is recommended at
# https://github.com/ToyotaResearchInstitute/delphyne-gui/blob/master/README.md
# The workspace we use here will necessarily look a little different from the
# one recommended for development based on the way Jenkins is configured.  In
# particular, the README.md recommends a workspace that looks like this:
#
#  delphyne_ws/
#      build
#          delphyne
#          drake
#          ign_cmake
#          ign_common
#          ...
#      install
#          include
#          lib
#          ...
#      src
#          delphyne
#              backend
#              bridge
#              ...
#          drake
#          ign_cmake
#          ign_common
#          ...
#
# For the purposes of Jenkins, our workspace will look like this:
#
#  delphyne/
#      backend
#      bridge
#      build
#          delphyne
#          drake
#          ign_cmake
#          ign_common
#          ...
#      install
#          include
#          lib
#          ...
#      workspace
#          delphyne_gui
#          drake
#          ign_cmake
#          ign_common
#          ...

mkdir -p workspace
pushd workspace

# We need to checkout delphyne-gui to get access to the delphyne.repos file
# to get all of our dependencies.  However, this is a private repository so we
# need the ssh keys from TRI to access this.  The below code fetches the ssh
# keys from an S3 bucket that TRI has, and is a bash version of the code located
# at: https://github.com/RobotLocomotion/drake-ci/blob/master/driver/configurations/aws.cmake
# and: https://github.com/RobotLocomotion/drake-ci/blob/master/tools/git_ssh.bash.in

SSH_IDENTITY_FILE=$( mktemp /tmp/id_rsa_XXXXXXXX )
aws s3 cp s3://drake-provisioning/id_rsa "$SSH_IDENTITY_FILE"
SSH_IDENTITY_SHA1=$( sha1sum "$SSH_IDENTITY_FILE" | cut -d' ' -f1 )
test "$SSH_IDENTITY_SHA1" = "8de7f79df9eb18344cf0e030d2ae3b658d81263b"
chmod 0400 "$SSH_IDENTITY_FILE"
GIT_SSH_FILE=$( mktemp /tmp/git_ssh_XXXXXXXX )
cat > "$GIT_SSH_FILE" <<EOF
ssh -i "$SSH_IDENTITY_FILE" -o StrictHostKeyChecking=no "\$@"
EOF
chmod 0755 "$GIT_SSH_FILE"
GIT_SSH="$GIT_SSH_FILE" git clone git@github.com:ToyotaResearchInstitute/delphyne-gui.git delphyne_gui

if [ "$CHANGE_BRANCH" != "" ]; then
    echo "**** Checking out delphyne-gui branch $CHANGE_BRANCH ****"
    pushd delphyne_gui
    git checkout "$CHANGE_BRANCH" || true
    popd
else
    echo "**** Using delphyne-gui branch master ****"
fi

rm -f "$GIT_SSH_FILE"
rm -f "$SSH_IDENTITY_FILE"

popd # workspace

# Make sure to remove both 'delphyne' and 'delphyne-gui' from 'delphyne.repos'
# since vcs will not have the proper credentials to access them.
sed -e '/^ *delphyne/d' workspace/delphyne_gui/delphyne.repos > deps.repos
vcs import workspace < deps.repos
