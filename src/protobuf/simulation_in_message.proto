// BSD 3-Clause License
//
// Copyright (c) 2022, Woven Planet. All rights reserved.
// Copyright (c) 2017-2022, Toyota Research Institute. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// * Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";
package ignition.msgs;
option java_package = "com.ignition.msgs";
option java_outer_classname = "SimulationInMessageProtos";

/// \ingroup ignition.msgs
/// \interface SimulationInMessage
/// \brief A message that is capable of being used in a simulation input queue

import "ignition/msgs/header.proto";
import "ignition/msgs/world_control.proto";
import "scene_request.proto";

message SimulationInMessage
{
  /// \brief The type of data the message contains.
  enum SimMsgType
  {
    /// \brief a world_control type message
    WORLDCONTROL  = 1;

    /// \brief a scene request type message
    SCENEREQUEST  = 2;

  }

  /// \brief Optional header data
  optional Header header                         = 1;

  /// \brief Type of message.
  optional SimMsgType type                       = 2;

  /// \brief An optional world control message
  optional WorldControl world_control            = 3;

  /// \brief An optional scene request message
  optional SceneRequest scene_request = 4;
}
