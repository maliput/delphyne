// BSD 3-Clause License
//
// Copyright (c) 2022, Woven Planet. All rights reserved.
// Copyright (c) 2017-2022, Toyota Research Institute. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// * Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";
package ignition.msgs;
option java_package = "com.ignition.msgs";
option java_outer_classname = "AgentStateProtos";

/// \ingroup ignition.msgs
/// \interface AgentState
/// \brief The status of a delphyne agent in a simulation.
///
/// Represented using the following conventions:
/// - position: A Vector3 of the form (x, y, z) in m.
/// - orientation: In euler angles following the x-y-z convention
/// (roll, pitch, yaw).
/// - linear_velocity: A Vector3 with the components of velocity on each of the
/// x, y and z axes, respectively. Measured in m/s.
/// - angular_velocity: A Vector3 with the angular velocities around the axes
/// x, y and z defined according to the right hand rule. Measured in rad/s.

import "ignition/msgs/header.proto";
import "ignition/msgs/time.proto";
import "ignition/msgs/vector3d.proto";
import "rpy_angles.proto";

message AgentState
{
  /// \brief Optional header data
  optional Header header             = 1;

  /// \brief The agent's name
  optional string name               = 2;

  /// \brief The timestamp in sec and nsec
  optional Time time                 = 3;

  /// \brief Position of the agent.
  optional Vector3d position         = 4;

  /// \brief Orientation of the agent in euler angles.
  optional RPYAngles orientation     = 5;

  /// \brief Linear velocity of the agent in m/s.
  optional Vector3d linear_velocity  = 6;

  /// \brief Angular velocity of the agent in rad/s.
  optional Vector3d angular_velocity = 7;

}
