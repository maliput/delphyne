// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewer2_comms.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "viewer2_comms.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ignition {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* Viewer2Comms_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Viewer2Comms_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_viewer2_5fcomms_2eproto() {
  protobuf_AddDesc_viewer2_5fcomms_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "viewer2_comms.proto");
  GOOGLE_CHECK(file != NULL);
  Viewer2Comms_descriptor_ = file->message_type(0);
  static const int Viewer2Comms_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, format_version_major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, format_version_minor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, data_),
  };
  Viewer2Comms_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Viewer2Comms_descriptor_,
      Viewer2Comms::default_instance_,
      Viewer2Comms_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Viewer2Comms, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Viewer2Comms));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_viewer2_5fcomms_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Viewer2Comms_descriptor_, &Viewer2Comms::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_viewer2_5fcomms_2eproto() {
  delete Viewer2Comms::default_instance_;
  delete Viewer2Comms_reflection_;
}

void protobuf_AddDesc_viewer2_5fcomms_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ignition::msgs::protobuf_AddDesc_ignition_2fmsgs_2fheader_2eproto();
  ::ignition::msgs::protobuf_AddDesc_ignition_2fmsgs_2ftime_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023viewer2_comms.proto\022\rignition.msgs\032\032ig"
    "nition/msgs/header.proto\032\030ignition/msgs/"
    "time.proto\"\262\001\n\014Viewer2Comms\022%\n\006header\030\001 "
    "\001(\0132\025.ignition.msgs.Header\022!\n\004time\030\002 \001(\013"
    "2\023.ignition.msgs.Time\022\016\n\006format\030\003 \001(\t\022\034\n"
    "\024format_version_major\030\004 \001(\005\022\034\n\024format_ve"
    "rsion_minor\030\005 \001(\005\022\014\n\004data\030\007 \001(\014B\'\n\021com.i"
    "gnition.msgsB\022Viewer2CommsProtos", 312);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "viewer2_comms.proto", &protobuf_RegisterTypes);
  Viewer2Comms::default_instance_ = new Viewer2Comms();
  Viewer2Comms::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_viewer2_5fcomms_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_viewer2_5fcomms_2eproto {
  StaticDescriptorInitializer_viewer2_5fcomms_2eproto() {
    protobuf_AddDesc_viewer2_5fcomms_2eproto();
  }
} static_descriptor_initializer_viewer2_5fcomms_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Viewer2Comms::kHeaderFieldNumber;
const int Viewer2Comms::kTimeFieldNumber;
const int Viewer2Comms::kFormatFieldNumber;
const int Viewer2Comms::kFormatVersionMajorFieldNumber;
const int Viewer2Comms::kFormatVersionMinorFieldNumber;
const int Viewer2Comms::kDataFieldNumber;
#endif  // !_MSC_VER

Viewer2Comms::Viewer2Comms()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ignition.msgs.Viewer2Comms)
}

void Viewer2Comms::InitAsDefaultInstance() {
  header_ = const_cast< ::ignition::msgs::Header*>(&::ignition::msgs::Header::default_instance());
  time_ = const_cast< ::ignition::msgs::Time*>(&::ignition::msgs::Time::default_instance());
}

Viewer2Comms::Viewer2Comms(const Viewer2Comms& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ignition.msgs.Viewer2Comms)
}

void Viewer2Comms::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  time_ = NULL;
  format_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_version_major_ = 0;
  format_version_minor_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Viewer2Comms::~Viewer2Comms() {
  // @@protoc_insertion_point(destructor:ignition.msgs.Viewer2Comms)
  SharedDtor();
}

void Viewer2Comms::SharedDtor() {
  if (format_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete format_;
  }
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
    delete header_;
    delete time_;
  }
}

void Viewer2Comms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Viewer2Comms::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Viewer2Comms_descriptor_;
}

const Viewer2Comms& Viewer2Comms::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_viewer2_5fcomms_2eproto();
  return *default_instance_;
}

Viewer2Comms* Viewer2Comms::default_instance_ = NULL;

Viewer2Comms* Viewer2Comms::New() const {
  return new Viewer2Comms;
}

void Viewer2Comms::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Viewer2Comms*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(format_version_major_, format_version_minor_);
    if (has_header()) {
      if (header_ != NULL) header_->::ignition::msgs::Header::Clear();
    }
    if (has_time()) {
      if (time_ != NULL) time_->::ignition::msgs::Time::Clear();
    }
    if (has_format()) {
      if (format_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        format_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Viewer2Comms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ignition.msgs.Viewer2Comms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ignition.msgs.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_time;
        break;
      }

      // optional .ignition.msgs.Time time = 2;
      case 2: {
        if (tag == 18) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_format;
        break;
      }

      // optional string format = 3;
      case 3: {
        if (tag == 26) {
         parse_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "format");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_format_version_major;
        break;
      }

      // optional int32 format_version_major = 4;
      case 4: {
        if (tag == 32) {
         parse_format_version_major:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_version_major_)));
          set_has_format_version_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_format_version_minor;
        break;
      }

      // optional int32 format_version_minor = 5;
      case 5: {
        if (tag == 40) {
         parse_format_version_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_version_minor_)));
          set_has_format_version_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_data;
        break;
      }

      // optional bytes data = 7;
      case 7: {
        if (tag == 58) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ignition.msgs.Viewer2Comms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ignition.msgs.Viewer2Comms)
  return false;
#undef DO_
}

void Viewer2Comms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ignition.msgs.Viewer2Comms)
  // optional .ignition.msgs.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->header(), output);
  }

  // optional .ignition.msgs.Time time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->time(), output);
  }

  // optional string format = 3;
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->format(), output);
  }

  // optional int32 format_version_major = 4;
  if (has_format_version_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->format_version_major(), output);
  }

  // optional int32 format_version_minor = 5;
  if (has_format_version_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->format_version_minor(), output);
  }

  // optional bytes data = 7;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ignition.msgs.Viewer2Comms)
}

::google::protobuf::uint8* Viewer2Comms::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ignition.msgs.Viewer2Comms)
  // optional .ignition.msgs.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->header(), target);
  }

  // optional .ignition.msgs.Time time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->time(), target);
  }

  // optional string format = 3;
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->format(), target);
  }

  // optional int32 format_version_major = 4;
  if (has_format_version_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->format_version_major(), target);
  }

  // optional int32 format_version_minor = 5;
  if (has_format_version_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->format_version_minor(), target);
  }

  // optional bytes data = 7;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ignition.msgs.Viewer2Comms)
  return target;
}

int Viewer2Comms::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ignition.msgs.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->header());
    }

    // optional .ignition.msgs.Time time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->time());
    }

    // optional string format = 3;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->format());
    }

    // optional int32 format_version_major = 4;
    if (has_format_version_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->format_version_major());
    }

    // optional int32 format_version_minor = 5;
    if (has_format_version_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->format_version_minor());
    }

    // optional bytes data = 7;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Viewer2Comms::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Viewer2Comms* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Viewer2Comms*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Viewer2Comms::MergeFrom(const Viewer2Comms& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::ignition::msgs::Header::MergeFrom(from.header());
    }
    if (from.has_time()) {
      mutable_time()->::ignition::msgs::Time::MergeFrom(from.time());
    }
    if (from.has_format()) {
      set_format(from.format());
    }
    if (from.has_format_version_major()) {
      set_format_version_major(from.format_version_major());
    }
    if (from.has_format_version_minor()) {
      set_format_version_minor(from.format_version_minor());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Viewer2Comms::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Viewer2Comms::CopyFrom(const Viewer2Comms& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Viewer2Comms::IsInitialized() const {

  return true;
}

void Viewer2Comms::Swap(Viewer2Comms* other) {
  if (other != this) {
    std::swap(header_, other->header_);
    std::swap(time_, other->time_);
    std::swap(format_, other->format_);
    std::swap(format_version_major_, other->format_version_major_);
    std::swap(format_version_minor_, other->format_version_minor_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Viewer2Comms::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Viewer2Comms_descriptor_;
  metadata.reflection = Viewer2Comms_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace ignition

// @@protoc_insertion_point(global_scope)
